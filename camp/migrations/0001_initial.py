# Generated by Django 5.0.1 on 2024-01-15 18:52

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CampCamper_adult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='adult', max_length=255)),
            ],
            options={
                'verbose_name': 'Adult camper',
                'db_table': 'camp_camper',
                'ordering': ['id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CampCamper_child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='child', max_length=255)),
            ],
            options={
                'verbose_name': ' Child camper',
                'db_table': 'camp_camper',
                'ordering': ['id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CampConstants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(default=2024, null=True)),
                ('form_open', models.DateField()),
                ('form_close', models.DateField()),
                ('form_late', models.DateField()),
                ('camp_start', models.DateField()),
            ],
            options={
                'db_table': 'camp_constants',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'camp dates',
                'verbose_name_plural': 'camp dates',
                'db_table': 'camp_dates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampHousingTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.CharField(max_length=255)),
                ('display_order', models.IntegerField()),
                ('cart_description', models.CharField(max_length=255)),
                ('short_description', models.CharField(max_length=20)),
                ('active', models.BooleanField(default=1, max_length=1, verbose_name='Include on regform?')),
            ],
            options={
                'verbose_name': 'housing choices',
                'verbose_name_plural': 'housing choices',
                'db_table': 'camp_housing_types',
                'ordering': ['display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampPrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.CharField(max_length=255)),
                ('display_order', models.IntegerField()),
                ('cart_description', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'prices',
                'verbose_name_plural': 'prices',
                'db_table': 'camp_prices',
                'ordering': ['-display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampRebates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.CharField(max_length=255)),
                ('display_order', models.IntegerField()),
                ('cart_description', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Membership rebates',
                'verbose_name_plural': 'Membership rebates',
                'db_table': 'camp_rebates',
                'ordering': ['display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampRegistrarInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=1, max_length=1, verbose_name='Include on regform?')),
                ('registration_source', models.IntegerField(choices=[(0, 'Camp'), (1, 'Membership')], default=0)),
            ],
            options={
                'verbose_name': 'Camp Registrar Address',
                'verbose_name_plural': 'Camp Registrar Address',
                'db_table': 'camp_registrar_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampRegistrationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Registration statuses',
                'verbose_name_plural': 'Registration statuses',
                'db_table': 'camp_registration_status',
                'ordering': ['-display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampRegistrationTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.CharField(max_length=255, verbose_name='slug - either "registration" or "membership"')),
                ('display_order', models.IntegerField()),
                ('cart_description', models.CharField(max_length=255)),
                ('adult_or_child', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=1, max_length=1, verbose_name='Include on regform?')),
            ],
            options={
                'verbose_name': 'registration types',
                'verbose_name_plural': 'registration types',
                'db_table': 'camp_registration_types',
                'ordering': ['-slug', '-display_order', '-active'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampShirtTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cut', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_description', models.CharField(blank=True, max_length=255, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
            options={
                'verbose_name': 'Shirt options',
                'verbose_name_plural': 'Shirt options',
                'db_table': 'camp_shirt_types',
                'ordering': ['display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('template_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('subject', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'camp_templates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MembershipRegistrationTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.CharField(max_length=255)),
                ('display_order', models.IntegerField()),
                ('cart_description', models.CharField(max_length=255)),
                ('adult_or_child', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=1, max_length=1, verbose_name='Include on regform?')),
            ],
            options={
                'db_table': 'membership_registration_types',
                'ordering': ['-display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MembershipReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('display_order', models.IntegerField()),
                ('category', models.CharField(choices=[('camp', 'Camp'), ('membership', 'Membership')], default='camp', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Website reports list',
                'db_table': 'membership_report',
                'ordering': ['display_order'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MembershipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membertype', models.CharField(db_column='membertype', max_length=100, verbose_name='Membership Type')),
                ('display_order', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': '__constants: Member Types',
                'db_table': 'membership_type',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='CampRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address1', models.CharField(max_length=255, null=True, verbose_name='Mailing address - street')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mailing address - apt/unit')),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(choices=[(' ', '-----'), (' ', 'None'), ('AA', 'Armed Forces Americas'), ('AB', 'Alberta'), ('AE', 'Armed Forces Europe'), ('AK', 'Alaska'), ('AL', 'Alabama'), ('AP', 'Armed Forces Pacific'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'District of Columbia'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NB', 'New Brunswick'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NL', 'Newfoundland and Labrador'), ('NM', 'New Mexico'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('SK', 'Saskatchewan'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming'), ('YT', 'Yukon'), (' ', '------')], default='Texas', max_length=255, null=True)),
                ('zip', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('donation_bobbi_gillotti', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Bobbi Gillotti fund donation')),
                ('donation_floor_fund', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Floor fund donation')),
                ('donation_camp_fund', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Floor fund donation')),
                ('donation_live_music', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Live music donation')),
                ('donation_tifd', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='TIFD fund donation')),
                ('donation_chuck', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Donation in remembrance of Chuck Roth')),
                ('payment', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('camper_note', models.TextField(blank=True, null=True)),
                ('adjustment_note', models.TextField(blank=True, null=True)),
                ('email_confirmation_sent', models.BooleanField(blank=True, default=0, max_length=1, null=True, verbose_name='Email conf sent?')),
                ('auction_items', models.TextField(blank=True, null=True)),
                ('session', models.TextField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_total', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('membership_fee_gross', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('late_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('paypal_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('shipping_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('paypal_gross', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('agreecheckbox', models.BooleanField(max_length=255, verbose_name='Safety policy checkbox')),
                ('registrar_approval_note', models.TextField(blank=True, null=True, verbose_name='Registrar confirmation email')),
                ('year', models.IntegerField(default=2024, null=True)),
                ('postmark', models.DateField(blank=True, null=True)),
                ('registration_source', models.IntegerField(choices=[(0, 'Camp'), (1, 'Membership')], default=0)),
                ('rebate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rebate_from_registration', to='camp.camprebates')),
                ('registration_status', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campregistrationstatus')),
            ],
            options={
                'verbose_name': ' Camp Registrations - All years',
                'verbose_name_plural': ' Camp Registrations - All years',
                'db_table': 'camp_registration',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CampCamper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='adult', max_length=255)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('housing_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.camphousingtypes')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campregistration')),
                ('registration_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='registration_type_from_camper', to='camp.campregistrationtypes')),
                ('t_shirt_type', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campshirttypes', verbose_name='I wish to order a commemorative camp t-shirt.')),
            ],
            options={
                'verbose_name': 'Adult camper',
                'db_table': 'camp_camper',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCampCamper',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='adult', max_length=255)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('housing_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.camphousingtypes')),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistration')),
                ('registration_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistrationtypes')),
                ('t_shirt_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campshirttypes', verbose_name='I wish to order a commemorative camp t-shirt.')),
            ],
            options={
                'verbose_name': 'historical Adult camper',
                'verbose_name_plural': 'historical Adult campers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCampCamper_adult',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='adult', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('housing_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.camphousingtypes')),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistration')),
                ('registration_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistrationtypes')),
                ('t_shirt_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campshirttypes', verbose_name='I wish to order a commemorative camp t-shirt.')),
            ],
            options={
                'verbose_name': 'historical Adult camper',
                'verbose_name_plural': 'historical Adult campers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCampCamper_child',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, null=True, verbose_name='Email address')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False, verbose_name='I use a mobility device such as wheelchair, walker, crutches, or cane.')),
                ('mobility_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobility device details')),
                ('certification', models.BooleanField(blank=True, default=False, verbose_name='I am certified in CPR, first aid, or AED, and am willing to be called on for first response in an emergency at camp.')),
                ('certification_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certification details')),
                ('family_program', models.BooleanField(blank=True, default=False, verbose_name='Participating in family program?')),
                ('medical', models.BooleanField(blank=True, default=False, verbose_name='I or my child(ren) have allergies, medical conditions, or medications the camp safety team should be aware of.')),
                ('medical_details', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medical notes')),
                ('band', models.BooleanField(blank=True, default=False, verbose_name='I will play in the camp band.')),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.BooleanField(blank=True, default=False, verbose_name='Dietary restrictions')),
                ('diet_details', models.TextField(blank=True, null=True, verbose_name='Dietary restrictions')),
                ('publish', models.BooleanField(blank=True, default=False, verbose_name='I consent to having my contact information published in the camp roster.')),
                ('staff', models.BooleanField(blank=True, default=False, verbose_name="I am a member of TIFD's\xa0administrative staff (camp committee volunteer).")),
                ('need_linen', models.BooleanField(blank=True, default=False, verbose_name='Check here to rent linens (sheets/towels) provided by GFC')),
                ('staff_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Staff position(s)')),
                ('free_t_shirt', models.BooleanField(blank=True, default=False, verbose_name='Free t-shirt for staff members')),
                ('dvd', models.BooleanField(blank=True, default=False, verbose_name="I wish to order a dance review video, in which this year's teachers demonstrate the dances they taught. Digital access - TIFD will send a link after camp")),
                ('share_housing', models.CharField(blank=True, max_length=255, null=True, verbose_name='I prefer to share housing with')),
                ('housing_assigned', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age at camp')),
                ('membership_years', models.IntegerField(default=1)),
                ('join_tifd', models.BooleanField(default=True, verbose_name='I would like to become a TIFD member or renew my membership ($15 for one year)')),
                ('custom_registration_price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Donation amount')),
                ('custom_registration_discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=7, null=True, verbose_name='Discount amount')),
                ('adult_or_child', models.CharField(choices=[('adult', 'adult'), ('child', 'child')], default='child', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('housing_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.camphousingtypes')),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistration')),
                ('registration_type', models.ForeignKey(blank=True, db_constraint=False, default=11, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistrationtypes')),
                ('t_shirt_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campshirttypes', verbose_name='I wish to order a commemorative camp t-shirt.')),
            ],
            options={
                'verbose_name': 'historical  Child camper',
                'verbose_name_plural': 'historical  Child campers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCampRegistration',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('address1', models.CharField(max_length=255, null=True, verbose_name='Mailing address - street')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mailing address - apt/unit')),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(choices=[(' ', '-----'), (' ', 'None'), ('AA', 'Armed Forces Americas'), ('AB', 'Alberta'), ('AE', 'Armed Forces Europe'), ('AK', 'Alaska'), ('AL', 'Alabama'), ('AP', 'Armed Forces Pacific'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'District of Columbia'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NB', 'New Brunswick'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NL', 'Newfoundland and Labrador'), ('NM', 'New Mexico'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('SK', 'Saskatchewan'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming'), ('YT', 'Yukon'), (' ', '------')], default='Texas', max_length=255, null=True)),
                ('zip', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('donation_bobbi_gillotti', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Bobbi Gillotti fund donation')),
                ('donation_floor_fund', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Floor fund donation')),
                ('donation_camp_fund', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Floor fund donation')),
                ('donation_live_music', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Live music donation')),
                ('donation_tifd', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='TIFD fund donation')),
                ('donation_chuck', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Donation in remembrance of Chuck Roth')),
                ('payment', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('camper_note', models.TextField(blank=True, null=True)),
                ('adjustment_note', models.TextField(blank=True, null=True)),
                ('email_confirmation_sent', models.BooleanField(blank=True, default=0, max_length=1, null=True, verbose_name='Email conf sent?')),
                ('auction_items', models.TextField(blank=True, null=True)),
                ('session', models.TextField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_total', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('membership_fee_gross', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('late_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('paypal_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('shipping_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('paypal_gross', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('agreecheckbox', models.BooleanField(max_length=255, verbose_name='Safety policy checkbox')),
                ('registrar_approval_note', models.TextField(blank=True, null=True, verbose_name='Registrar confirmation email')),
                ('year', models.IntegerField(default=2024, null=True)),
                ('postmark', models.DateField(blank=True, null=True)),
                ('registration_source', models.IntegerField(choices=[(0, 'Camp'), (1, 'Membership')], default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rebate', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.camprebates')),
                ('registration_status', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistrationstatus')),
            ],
            options={
                'verbose_name': 'historical  Camp Registrations - All years',
                'verbose_name_plural': 'historical  Camp Registrations - All years',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MembershipAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('zip', models.CharField(max_length=255)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('newsletter_hardcopy', models.BooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campregistration')),
            ],
            options={
                'db_table': 'membership_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MembershipPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('member_year', models.IntegerField(null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='email address')),
                ('email2', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=10, message='Phone number should have at least 10 numbers.  Missing area code?')], verbose_name='Phone Number')),
                ('work_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('home_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('membership_valid_from', models.DateField(blank=True, null=True)),
                ('membership_valid_to', models.DateField(blank=True, null=True)),
                ('member_since', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('dancegroups', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('flags', models.CharField(blank=True, max_length=255, null=True)),
                ('email_newsletter', models.IntegerField(blank=True, null=True)),
                ('legacy_pubemail1', models.IntegerField(blank=True, null=True)),
                ('legacy_pubemail2', models.IntegerField(blank=True, null=True)),
                ('legacy_agecategory', models.CharField(blank=True, max_length=255, null=True)),
                ('last_camp', models.IntegerField(blank=True, null=True)),
                ('legacy_dob', models.DateField(blank=True, null=True)),
                ('membership_years', models.IntegerField(blank=True, default=1, null=True)),
                ('membership_address', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='camp.membershipaddress')),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campregistration')),
                ('registration_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.membershipregistrationtypes')),
                ('membership_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='camp.membershiptype')),
            ],
            options={
                'db_table': 'membership_person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MembershipPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gross_amt', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Gross')),
                ('net_amt', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Net')),
                ('refund_amt', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Refund')),
                ('date_recd', models.DateField(default='2024-01-15', verbose_name='Date received')),
                ('who_has_possession', models.CharField(max_length=255, verbose_name='Who has possession')),
                ('payment_type', models.IntegerField(choices=[(1, 'Check'), (2, 'Cash'), (3, 'PayPal')], default=1, verbose_name='Type')),
                ('waiting_for_deposit', models.BooleanField(default=1, verbose_name='Waiting for deposit')),
                ('cash', models.BooleanField(blank=True, null=True)),
                ('check_num', models.CharField(blank=True, max_length=25, null=True, verbose_name='Check #')),
                ('deposit_date', models.DateField(blank=True, null=True)),
                ('pp_ipn_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_email', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_txn_id', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_id', models.IntegerField(blank=True, null=True)),
                ('membership_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('years_paid', models.IntegerField(blank=True, null=True)),
                ('paypal_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='PayPal fee')),
                ('camp_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('t_shirt_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dvd_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gfc_linens', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('housing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('late_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bobbi_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('floor_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('music_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('general_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('camp_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('chuck_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('texakolo_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Payment Note')),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.campregistration')),
                ('membership_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='camp.membershipperson')),
            ],
            options={
                'verbose_name': 'Payments',
                'verbose_name_plural': 'Payments',
                'db_table': 'membership_payments',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalMembershipPayments',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('gross_amt', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Gross')),
                ('net_amt', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Net')),
                ('refund_amt', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Refund')),
                ('date_recd', models.DateField(default='2024-01-15', verbose_name='Date received')),
                ('who_has_possession', models.CharField(max_length=255, verbose_name='Who has possession')),
                ('payment_type', models.IntegerField(choices=[(1, 'Check'), (2, 'Cash'), (3, 'PayPal')], default=1, verbose_name='Type')),
                ('waiting_for_deposit', models.BooleanField(default=1, verbose_name='Waiting for deposit')),
                ('cash', models.BooleanField(blank=True, null=True)),
                ('check_num', models.CharField(blank=True, max_length=25, null=True, verbose_name='Check #')),
                ('deposit_date', models.DateField(blank=True, null=True)),
                ('pp_ipn_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_email', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_txn_id', models.CharField(blank=True, max_length=255, null=True)),
                ('pp_ipn_id', models.IntegerField(blank=True, null=True)),
                ('membership_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('years_paid', models.IntegerField(blank=True, null=True)),
                ('paypal_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='PayPal fee')),
                ('camp_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('t_shirt_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dvd_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gfc_linens', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('housing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('late_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bobbi_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('floor_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('music_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('general_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('camp_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('chuck_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('texakolo_fund', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Payment Note')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.campregistration')),
                ('membership_person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='camp.membershipperson')),
            ],
            options={
                'verbose_name': 'historical Payments',
                'verbose_name_plural': 'historical Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
